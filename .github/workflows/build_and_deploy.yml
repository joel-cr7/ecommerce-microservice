# name of the Github Actions pipeline
name: Springboot CI/CD Pipeline

# Here specify when we want to trigger the start of pipeline
on:
  push:
    branches: [ master ]
  workflow_dispatch:        # using this allows us to have a button in github actions for manually running pipeline


# these env variables could be used in the jobs created below
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}    # use secret defined in github
  GKE_CLUSTER: ecommerce-cluster
  GKE_ZONE: asia-south1


# Define various jobs
jobs:

  # we can name the job anything (here naming as build)
  Build:
    runs-on: ubuntu-latest      # this will run on ubuntu machine

    # strategy is a concept which is used when we want to parallely run the below steps in all these services mentioned
    strategy:
      matrix:
        service:
          - api-gateway
          - config-server
          - inventory-service
          - order-service

    steps:
      # Step1: Checkout the repository (clones the GitHub repo)
      - name: Checkout code
        uses: actions/checkout@v3     # we can use various actions (like we have github repo similarly we have github actions build and published by developers), we can use them

      # Step2: Setup java
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'     # these are variables that we need to pass to action (if it accepts)
          java-version: '21'

      # Step3: Login to Docker hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step4: Build and push Docker image using Jib plugin
      - name: Build and Push ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          ./mvnw clean package -DskipTests


  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: kubectl - Google cloud GKE cluster
        uses: ameydev/gke-kubectl-action@master     # all below env variables are documented in this github repo for the github actions
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GK_SA_KEY }}
          CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
          ZONE_NAME: ${{ env.GKE_ZONE }}
        with:
          args: apply -f k8s/         # provide the file to yml files required for kubernetes
